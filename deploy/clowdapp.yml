---
apiVersion: v1
kind: Template
metadata:
  name: chrome-service
objects:
  - apiVersion: cloud.redhat.com/v1alpha1
    kind: ClowdApp
    metadata: 
      name: chrome-service
    spec:
      envName: ${ENV_NAME}
      database:
        name: chrome-service
      featureFlags: true
      kafkaTopics:
      # one replica for now; most of this will change
      - replicas: 1
        partitions: 8
        topicName: platform.chrome
      deployments:
      - name: api
        minReplicas: ${{MIN_REPLICAS}}
        webServices:
            public:
              apiPath: chrome-service
              enabled: true
              whitelistPaths:
                - /api/chrome-service/v1/static/*
        podSpec:
          image: ${IMAGE}:${IMAGE_TAG}
          initContainers:
            - name: run-db-migration
              command:
                - bash
                - -c
                - chrome-migrate 
              inheritEnv: true
            - name: publish-search-index
              command:
                - bash
                - -c
                - chrome-search-index
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8000
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 120
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8000
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 120
          env:
          - name: FRONTEND_ENVIRONMENT
            value: ${FRONTEND_ENVIRONMENT}
          - name: FEO_SEARCH_INDEX
            valueFrom:
              configMapKeyRef:
                key: search-index.json
                name: ${FRONTEND_CONTEXT_NAME}
                # because keys in configmap can be empty
                optional: true
          - name: FEO_FED_MODULES
            valueFrom:
              configMapKeyRef:
                key: fed-modules.json
                name: ${FRONTEND_CONTEXT_NAME}
                optional: true
          - name: FEO_SERVICE_TILES
            valueFrom:
              configMapKeyRef:
                key: service-tiles.json
                name: ${FRONTEND_CONTEXT_NAME}
                optional: true
          - name: FEO_WIDGET_REGISTRY
            valueFrom:
              configMapKeyRef:
                key: widget-registry.json
                name: ${FRONTEND_CONTEXT_NAME}
                optional: true
          - name: FEO_BUNDLES
            valueFrom:
              configMapKeyRef:
                key: bundles.json
                name: ${FRONTEND_CONTEXT_NAME}
                optional: true
          - name: CLOWDER_ENABLED
            value: ${CLOWDER_ENABLED}
          - name: LOG_LEVEL 
            value: ${LOG_LEVEL}
          - name: INTERCOM_DEFAULT
            valueFrom:
              secretKeyRef:
                name: chrome-service-backend
                key: INTERCOM_DEFAULT
          - name: INTERCOM_ACS
            valueFrom:
              secretKeyRef:
                name: chrome-service-backend
                key: INTERCOM_ACS
          - name: INTERCOM_ACS_DEV
            valueFrom:
              secretKeyRef:
                name: chrome-service-backend
                key: INTERCOM_ACS_DEV
          - name: INTERCOM_ANSIBLE
            valueFrom:
              secretKeyRef:
                name: chrome-service-backend
                key: INTERCOM_ANSIBLE
          - name: INTERCOM_ANSIBLE_DEV
            valueFrom:
              secretKeyRef:
                name: chrome-service-backend
                key: INTERCOM_ANSIBLE_DEV
          - name: INTERCOM_HAC_CORE
            valueFrom:
              secretKeyRef:
                name: chrome-service-backend
                key: INTERCOM_HAC_CORE
          - name: INTERCOM_OPENSHIFT
            valueFrom:
              secretKeyRef:
                name: chrome-service-backend
                key: INTERCOM_OPENSHIFT
          - name: INTERCOM_OPENSHIFT_DEV
            valueFrom:
              secretKeyRef:
                name: chrome-service-backend
                key: INTERCOM_OPENSHIFT_DEV
          - name: INTERCOM_DBAAS
            valueFrom:
              secretKeyRef:
                name: chrome-service-backend
                key: INTERCOM_DBAAS
          - name: INTERCOM_DBAAS_DEV
            valueFrom:
              secretKeyRef:
                name: chrome-service-backend
                key: INTERCOM_DBAAS_DEV
          - name: SEARCH_CLIENT_SECRET_PROD
            valueFrom:
              secretKeyRef:
                name: chrome-service-backend
                key: SEARCH_CLIENT_SECRET_PROD
          - name: SEARCH_CLIENT_SECRET_STAGE
            valueFrom:
              secretKeyRef:
                name: chrome-service-backend
                key: SEARCH_CLIENT_SECRET_STAGE
          - name: DEBUG_FAVORITES_ACCOUNT_1
            valueFrom:
              secretKeyRef:
                name: chrome-service-backend
                key: DEBUG_FAVORITES_ACCOUNT_1
          resources:
            limits:
              cpu: ${CPU_LIMIT_CHROME_SERVICE}
              memory: ${MEMORY_LIMIT_CHROME_SERVICE}
            requests:
              cpu: ${CPU_REQUEST_CHROME_SERVICE}
              memory: ${MEMORY_REQUEST_CHROME_SERVICE}

  # This is a dummy secret to make ephemeral deploy correctly. It will not roll out to stage or prod
  # Unless we set "secret" in "managedResourceTypes" in the app-interface saas file.
  - apiVersion: v1
    kind: Secret
    metadata:
      name: chrome-service-backend
    data:
      INTERCOM_OPENSHIFT: aW5zaWdodHMtcmJhYw==
      INTERCOM_ACS: dGVzdFZhbHVl
      INTERCOM_ACS_DEV: dGVzdFZhbHVl
      INTERCOM_ANSIBLE: dGVzdFZhbHVl
      INTERCOM_ANSIBLE_DEV: dGVzdFZhbHVl
      INTERCOM_DEFAULT: dGVzdFZhbHVl
      INTERCOM_HAC_CORE: dGVzdFZhbHVl
      INTERCOM_OPENSHIFT_DEV: dGVzdFZhbHVl
      SEARCH_CLIENT_SECRET_PROD: dGVzdFZhbHVl
      SEARCH_CLIENT_SECRET_STAGE: dGVzdFZhbHVl
      INTERCOM_DBAAS: dGVzdFZhbHVl
      INTERCOM_DBAAS_DEV: dGVzdFZhbHVl
      DEBUG_FAVORITES_ACCOUNT_1: OTk5
    type: Opaque

parameters:
- name: LOG_LEVEL
  value: Warn  # Do not log debug/info messages by default
- description: Cpu limit of service
  name: CPU_LIMIT_CHROME_SERVICE
  value: 500m
- description: memory limit of service
  name: MEMORY_LIMIT_CHROME_SERVICE
  value: 512Mi
- description: Cpu requests of service
  name: CPU_REQUEST_CHROME_SERVICE
  value: 250m
- description: Memory requests of service
  name: MEMORY_REQUEST_CHROME_SERVICE
  value: 256Mi
- name: MIN_REPLICAS
  value: '3'
- description: Image tag
  name: IMAGE_TAG
  required: true
- description: Image name
  name: IMAGE
  value: quay.io/redhat-services-prod/hcc-platex-services/chrome-service
- description: ClowdEnv Name
  name: ENV_NAME
  required: true
- description: Chrome config map name
  name: FRONTEND_CONTEXT_NAME
  value: feo-context-cfg
- name: LINT_ANNOTATION
  value: 'ignore-check.kube-linter.io/minimum-three-replicas'
- description: Frontend environment
  name: FRONTEND_ENVIRONMENT
  # fallback to stage environment if not set
  value: stage
- description: Maximum number of recently used workspaces that the Chrome back end will store in the database for each user.
  name: RECENTLY_USED_WORKSPACES_MAX_SAVED
  value: '10'
